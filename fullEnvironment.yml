kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  annotations:
    volume.beta.kubernetes.io/storage-provisioner: kubernetes.io/cinder
  name: sample-database
  namespace: fiap-grupo-16
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: standard
  volumeMode: Filesystem
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  annotations:
    volume.beta.kubernetes.io/storage-provisioner: kubernetes.io/cinder
  name: pvc-app
  namespace: fiap-grupo-16
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 512Mi
  storageClassName: standard
  volumeMode: Filesystem
---
kind: Secret
apiVersion: v1
metadata:
    name: secret-sample-database
data:
  database-name: c2FtcGxlZGI=
  database-password: c2FtcGxlZGI=
  database-user: c2FtcGxlZGI=
---
kind: DeploymentConfig
apiVersion: apps.openshift.io/v1
metadata:
  name: sample-database
  generation: 2
  namespace: fiap-grupo-16
  labels:
    app: sample-database
    app.kubernetes.io/component: sample-database
    app.kubernetes.io/instance: sample-database
spec:
  strategy:
    type: Recreate
    recreateParams:
      timeoutSeconds: 600
    resources: {}
    activeDeadlineSeconds: 21600
  triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
          - postgresql
        from:
          kind: ImageStreamTag
          namespace: openshift
          name: 'postgresql:10-el8'
    - type: ConfigChange
  replicas: 1
  revisionHistoryLimit: 10
  test: false
  selector:
    name: sample-database
  template:
    metadata:
      labels:
        name: sample-database
    spec:
      volumes:
        - name: sample-database-data
          persistentVolumeClaim:
            claimName: sample-database
      containers:
        - resources:
            limits:
              memory: 512Mi
          readinessProbe:
            exec:
              command:
                - /usr/libexec/check-container
            initialDelaySeconds: 5
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          name: postgresql
          livenessProbe:
            exec:
              command:
                - /usr/libexec/check-container
                - '--live'
            initialDelaySeconds: 120
            timeoutSeconds: 10
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          env:
            - name: POSTGRESQL_USER
              valueFrom:
                secretKeyRef:
                  name: secret-sample-database
                  key: database-user
            - name: POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: secret-sample-database
                  key: database-password
            - name: POSTGRESQL_DATABASE
              valueFrom:
                secretKeyRef:
                  name: secret-sample-database
                  key: database-name
          securityContext:
            capabilities: {}
            privileged: false
          ports:
            - containerPort: 5432
              protocol: TCP
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: sample-database-data
              mountPath: /var/lib/pgsql/data
          terminationMessagePolicy: File
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
---
kind: BuildConfig
apiVersion: build.openshift.io/v1
metadata:
  annotations:
    app.openshift.io/vcs-ref: ''
    app.openshift.io/vcs-uri: 'https://github.com/openshift-instruqt/blog-django-py'
  name: blog-django-py
  namespace: fiap-grupo-16
  labels:
    app: blog-django-py
    app.kubernetes.io/component: blog-django-py
    app.kubernetes.io/instance: blog-django-py
    app.kubernetes.io/name: python
    app.kubernetes.io/part-of: blog-django-py-app
    app.openshift.io/runtime: python
    app.openshift.io/runtime-version: 3.8-ubi7
spec:
  output:
    to:
      kind: ImageStreamTag
      name: 'blog-django-py:latest'
  resources: {}
  successfulBuildsHistoryLimit: 5
  failedBuildsHistoryLimit: 5
  strategy:
    type: Source
    sourceStrategy:
      from:
        kind: ImageStreamTag
        namespace: openshift
        name: 'python:3.8-ubi7'
  postCommit: {}
  source:
    type: Git
    git:
      uri: 'https://github.com/openshift-instruqt/blog-django-py'
    contextDir: /
  triggers:
    - type: "GitHub"
      github:
        secret: "secret101"
    - type: "Generic"
      generic:
        secret: "secret101"
    - type: "ImageChange"
  runPolicy: Serial
---
kind: Service
apiVersion: v1
metadata:
  annotations:
    app.openshift.io/vcs-ref: ''
    app.openshift.io/vcs-uri: 'https://github.com/openshift-instruqt/blog-django-py'
  name: blog-django-py
  namespace: fiap-grupo-16
  labels:
    app: blog-django-py
    app.kubernetes.io/component: blog-django-py
    app.kubernetes.io/instance: blog-django-py
    app.kubernetes.io/name: python
    app.kubernetes.io/part-of: blog-django-py-app
    app.openshift.io/runtime: python
    app.openshift.io/runtime-version: 3.8-ubi7
spec:
  ports:
    - name: 8080-tcp
      protocol: TCP
      port: 8080
      targetPort: 8080
  selector:
    app: blog-django-py
    deploymentconfig: blog-django-py
---
kind: Service
apiVersion: v1
metadata:
  annotations:
    template.openshift.io/expose-uri: 'postgres://{.spec.clusterIP}:{.spec.ports[?(.name=="postgresql")].port}'
  name: sample-database
  namespace: fiap-grupo-16
  labels:
    app: sample-database
    app.kubernetes.io/component: sample-database
    app.kubernetes.io/instance: sample-database
    template: postgresql-persistent-template
spec:
  ports:
    - name: postgresql
      protocol: TCP
      port: 5432
      targetPort: 5432
  selector:
    name: sample-database
---
kind: Deployment
apiVersion: apps/v1
metadata:
  annotations:
    alpha.image.policy.openshift.io/resolve-names: '*'
    app.openshift.io/vcs-ref: ''
    app.openshift.io/vcs-uri: 'https://github.com/openshift-instruqt/blog-django-py'
    deployment.kubernetes.io/revision: '2'
    image.openshift.io/triggers: >-
      [{"from":{"kind":"ImageStreamTag","name":"blog-django-py:latest"},"fieldPath":"spec.template.spec.containers[?(@.name==\"blog-django-py\")].image","pause":"false"}]
  name: blog-django-py
  generation: 2
  namespace: fiap-grupo-16
  labels:
    app: blog-django-py
    app.kubernetes.io/component: blog-django-py
    app.kubernetes.io/instance: blog-django-py
    app.kubernetes.io/name: python
    app.kubernetes.io/part-of: blog-django-py-app
    app.openshift.io/runtime: python
    app.openshift.io/runtime-version: 3.8-ubi7
spec:
  replicas: 1
  selector:
    matchLabels:
      app: blog-django-py
  template:
    metadata:
      labels:
        app: blog-django-py
        deploymentconfig: blog-django-py
    spec:
      volumes:
        - name: blog-data
          persistentVolumeClaim:
            claimName: pvc-app
      containers:
        - name: blog-django-py
          image: ' '
          env:
          - name: BLOG_SITE_NAME
            value: 'Blog Fiap - 6Âª ASO - Grupo 16'
          - name: BLOG_BANNER_COLOR
            value: 'gray'
          - name: DATABASE_URL
            value: postgresql://sampledb:sampledb@sample-database:5432/sampledb
          ports:
            - containerPort: 8080
              protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: hpa-blog-django-py
  namespace: fiap-grupo-16
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: blog-django-py
  minReplicas: 2
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          averageUtilization: 20
          type: Utilization
---
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  annotations:
    openshift.io/host.generated: 'true'
  name: blog-django-py-new-link
  namespace: fiap-grupo-16
  labels:
    app: blog-django-py
    app.kubernetes.io/component: blog-django-py
    app.kubernetes.io/instance: blog-django-py
    app.kubernetes.io/name: python
    app.kubernetes.io/part-of: blog-django-py-app
    app.openshift.io/runtime: python
    app.openshift.io/runtime-version: 3.8-ubi7
spec:
  host: blogfiap.apps.na46.prod.nextcle.com
  to:
    kind: Service
    name: blog-django-py
    weight: 100
  port:
    targetPort: 8080-tcp
  wildcardPolicy: None
status:
  ingress:
    - host: blogfiap.apps.na46.prod.nextcle.com
      routerName: default
      conditions:
        - type: Admitted
          status: 'True'
      wildcardPolicy: None
      routerCanonicalHostname: apps.na46.prod.nextcle.com